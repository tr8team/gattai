version: v1

temp_folder: ./localtmp

enforce_targets:
  dev:
    - STAGING_MYSQL_URL
    - STAGING_REDIS_URL
    - CLUSTER_SECGROUP_ID
    - NGINX_POD_SECGROUP_ID
    - PHPFPM_POD_SECGROUP_ID

repos:
  local-src:
    src: local
    config:
      dir: gattai_actions
  #github-libs:
  #  src: git
  #  config:
  #    url: https://github.com/tr8team/gattai-libs.git
  #    branch: develop

targets:
  dev:
    STAGING_MYSQL_URL:
      action: local-src/aws/query_rds_cluster
      vars:
        region: ap-southeast-1
        identifier: staging-systems-engineering-transactional-database
        query: Endpoint
    STAGING_REDIS_URL:
      action: local-src/aws/query_elasticache_replica_grp
      vars:
        region: ap-southeast-1
        identifier: staging-systems-engineering-cache
        query: ConfigurationEndpoint.Address
    CLUSTER_SECGROUP_ID:
      action: local-src/aws/query_security_grp
      vars:
        region: ap-southeast-1
        filters:
          group-name: "*staging-main-eks_cluster*"
        query: GroupId
    NGINX_POD_SECGROUP_ID:
      action: local-src/aws/query_security_grp
      vars:
        region: ap-southeast-1
        filters:
          group-name: "*staging-systems-engineering-frontend*"
        query: GroupId
    PHPFPM_POD_SECGROUP_ID:
      action: local-src/aws/query_security_grp
      vars:
        region: ap-southeast-1
        filters:
          group-name: "*staging-systems-engineering-web-app*"
        query: GroupId
    UPSTASH_ENDPOINT:
      action: local-src/upstash/get_upstash_redis_database_endpoint
      vars:
        identifier: "a215fc0a-04c5-4693-9e83-de5792915cf3"
    create_file:
      action: local-src/write_temp_file
      vars:
        filename: values.yaml
        content: |
          nginx:
            securityGroupPolicy:
              groupIds:
                - {{ fetch .Targets.dev.NGINX_POD_SECGROUP_ID }}
                - {{ fetch .Targets.dev.CLUSTER_SECGROUP_ID }}
          phpfpm:
            envFile:
              name: envfile
              key: .env.remote-testing
            securityGroupPolicy:
              groupIds:
                - {{ fetch .Targets.dev.PHPFPM_POD_SECGROUP_ID }}
                - {{ fetch .Targets.dev.CLUSTER_SECGROUP_ID }}
          mysql:
            enabled: false
            nameOverride: "transactional-database"
            externalName: {{ fetch .Targets.dev.STAGING_MYSQL_URL }}
          redis:
            enabled: false
            nameOverride: "cache"
            externalName: {{ fetch .Targets.dev.STAGING_REDIS_URL }}
    return:
      action: local-src/k8s_rsc/external_secret
      vars:
        header: "{{`{{- if not .Values.phpfpm.envFile.deploy -}}`}}"
        name: "{{`{{ .Release.Name -}}`}}-external-secret"
        labels:
          tr8.io/type: external-secret
        secretStoreName: awssm-secretstore
        secretStoreKind: ClusterSecretStore
        k8sSecretName: "{{`{{ .Release.Name -}}`}}-{{`{{ .Values.phpfpm.envFile.name }}`}}"
        creationPolicy: Owner
        deletionPolicy: Retain
        data:
          - secretKey: "{{`{{ .Values.phpfpm.envFile.key }}`}}"
            remoteRef:
              key: "staging/engineering/remotetest"
              property: "remote-test-env"
        footer: "{{`{{- end }}`}}"
        output_filepath: test.yaml
        #dataFrom:
        #  - extract:
        #      key: "staging/engineering/remotetest"
        #      property: "remote-test-env"
        #      version: v1
