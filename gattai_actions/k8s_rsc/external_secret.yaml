version: v1
type: CommandLineInterface
params:
  required:
    name:
      desc: The content to be save if any
      type: string
    secretStoreName:
      desc: The content to be save if any
      type: string
    secretStoreKind:
      desc: The content to be save if any
      type: string
    k8sSecretName:
      desc: The content to be save if any
      type: string
    creationPolicy:
      desc: The content to be save if any
      type: string
    deletionPolicy:
      desc: The content to be save if any
      type: string
  optional:
    labels:
      desc: The content to be save if any
      type: dict
      dict_of:
        key:
          desc: The content to be save if any
          type: string
        value:
          desc: The content to be save if any
          type: string
spec:
  exec:
    cmds:
      - command: echo
        {{- with .Vars }}
        args:
          - |
            "{{- if .header -}}
            {{ .header }}
            {{- end }}
            apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: {{ .name }}
              {{- if .labels }}
              labels:
              {{- range $k, $v := .labels }}
                {{ $k }}: {{ $v }}
              {{- end }}
              {{- end }}
            spec:
              refreshInterval: 1h
              secretStoreRef:
                name: {{ .secretStoreName }}
                kind: {{ .secretStoreKind }}
              target:
                name: {{ .k8sSecretName }}
                creationPolicy: {{ .creationPolicy }}
                deletionPolicy: {{ .deletionPolicy }}
              {{- with .data }}
              data:
              {{- range $elem := . }}
                - secretKey: {{ $elem.secretKey }}
                  remoteRef:
                  {{- range $k, $v := $elem.remoteRef }}
                    {{ $k }}: {{ $v }}
                  {{- end }}
              {{- end }}
              {{- end }}
              {{- with .dataFrom }}
              dataFrom:
                {{- range $elem := . }}
                {{- with $elem.extract }}
                - extract:
                  {{- range $k, $v := . }}
                    {{ $k }}: {{ $v }}
                  {{- end }}
                {{- end }}
                {{- with $elem.find }}
                - find:
                  {{- range $k, $v := . }}
                    {{ $k }}: {{ $v }}
                  {{- end }}
                {{- end }}
                {{- end }}
              {{- end }}
            {{- if .footer }}
            {{ .footer }}
            {{- end }}" > {{ .output_filepath }}
        {{- end }}
